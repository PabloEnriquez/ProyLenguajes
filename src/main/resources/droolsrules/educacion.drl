//created on: Apr 16, 2017
package com.trucutru
 import java.util.ArrayList;  
 import java.util.List;
import com.trucutru.model.*;

declare Counter
	name : String @key
	value : double @key
end

/*rule "Insertar datos"
	salience 100
	when
	then
		//---
		List<String> recoms = new ArrayList<String>();
		Estudiante e1 = new Estudiante("Pedro Paramo", 0.0, recoms);
		insert(e1);
		
		Materia m1 = new Materia("Fisica", "Rafael Lozano", 7);
		Materia m2 = new Materia("Matematicas", "Jose Castro", 8);
		insert(m1);
		insert(m2);
		
		Estudiante_materia estud_mat1 = new Estudiante_materia(m1.getId(), e1.getId(), 0.0, 1.0);
		Estudiante_materia estud_mat2 = new Estudiante_materia(m2.getId(), e1.getId(), 0.0, 1.0);
		insert(estud_mat1);
		insert(estud_mat2);
		//---
		Tema t1 = new Tema(m1.getId(), "MRUA", 7);
		Tema t2 = new Tema(m1.getId(), "CaidaLibre", 7);
		Tema t3 = new Tema(m2.getId(), "Limites", 7);
		Tema t4 = new Tema(m2.getId(), "Divisiones", 7);
		insert(t1);
		insert(t2);
		insert(t3);
		insert(t4);
		
		Tema_estudiante tema_estud1 = new Tema_estudiante(t1.getId(), e1.getId(), 0.0);
		Tema_estudiante tema_estud2 = new Tema_estudiante(t2.getId(), e1.getId(), 0.0);
		Tema_estudiante tema_estud3 = new Tema_estudiante(t3.getId(), e1.getId(), 0.0);
		Tema_estudiante tema_estud4 = new Tema_estudiante(t4.getId(), e1.getId(), 0.0);
		insert(tema_estud1);
		insert(tema_estud2);
		insert(tema_estud3);
		insert(tema_estud4);
		//---
		Tarea tar1 = new Tarea(t1.getId(), "Ejercicio 1", 8);
		Tarea tar2 = new Tarea(t1.getId(), "Tarea 1", 7);
		Tarea tar3 = new Tarea(t1.getId(), "Assignment 2", 6);
		insert(tar1);
		insert(tar2);
		insert(tar3);
		
		Tarea_estudiante tar_estud1 = new Tarea_estudiante(tar1.getId(), t1.getId(), e1.getId(), 26.0, true);
		Tarea_estudiante tar_estud2 = new Tarea_estudiante(tar2.getId(), t1.getId(), e1.getId(), 76.0, true);
		Tarea_estudiante tar_estud3 = new Tarea_estudiante(tar3.getId(), t1.getId(), e1.getId(), 0.0, false);
		insert(tar_estud1);
		insert(tar_estud2);
		insert(tar_estud3);
		//---
		Tarea tar4 = new Tarea(t2.getId(), "Proyecto 1", 8);
		Tarea tar5 = new Tarea(t2.getId(), "Ejercicio 5", 8);
		Tarea tar6 = new Tarea(t2.getId(), "Tarea 3", 8);
		insert(tar4);
		insert(tar5);
		insert(tar6);
		
		Tarea_estudiante tar_estud4 = new Tarea_estudiante(tar4.getId(), t2.getId(), e1.getId(), 76.0, true);
		Tarea_estudiante tar_estud5 = new Tarea_estudiante(tar5.getId(), t2.getId(), e1.getId(), 56.0, true);
		Tarea_estudiante tar_estud6 = new Tarea_estudiante(tar6.getId(), t2.getId(), e1.getId(), 0.0, false);
		insert(tar_estud4);
		insert(tar_estud5);
		insert(tar_estud6);
		//---
		Tarea tar7 = new Tarea(t3.getId(), "Ejercicio 5", 8);
		Tarea tar8 = new Tarea(t3.getId(), "Tarea 9", 7);
		Tarea tar9 = new Tarea(t3.getId(), "Examen 2", 6);
		insert(tar7);
		insert(tar8);
		insert(tar9);
		
		Tarea_estudiante tar_estud7 = new Tarea_estudiante(tar7.getId(), t3.getId(), e1.getId(), 0.0, false);
		Tarea_estudiante tar_estud8 = new Tarea_estudiante(tar8.getId(), t3.getId(), e1.getId(), 46.0, true);
		Tarea_estudiante tar_estud9 = new Tarea_estudiante(tar9.getId(), t3.getId(), e1.getId(), 56.0, true);
		insert(tar_estud7);
		insert(tar_estud8);
		insert(tar_estud9);
		//---
		Tarea tar10 = new Tarea(t4.getId(), "Prueba 1", 8);
		Tarea tar11 = new Tarea(t4.getId(), "Examen 3", 7);
		Tarea tar12 = new Tarea(t4.getId(), "Ejercicios 2", 6);
		insert(tar10);
		insert(tar11);
		insert(tar12);
		
		Tarea_estudiante tar_estud10 = new Tarea_estudiante(tar10.getId(), t4.getId(), e1.getId(), 36.0, true);
		Tarea_estudiante tar_estud11 = new Tarea_estudiante(tar11.getId(), t4.getId(), e1.getId(), 0.0, false);
		Tarea_estudiante tar_estud12 = new Tarea_estudiante(tar12.getId(), t4.getId(), e1.getId(), 46.0, true);
		insert(tar_estud10);
		insert(tar_estud11);
		insert(tar_estud12);
		//---
		//insert(new Counter());
end
*/

rule "Contador por cada estudiante"
	salience 99
	when
		$e : Estudiante();
	then
		insert( new Counter($e.getNombre(), 0) );
end

rule "Contador por cada estudiante para tareas NO hechas por materia"
	salience 99
	when
		$mat : Materia();
		$estud : Estudiante();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
	then
		insert( new Counter($mat.getNombre().concat("TareasNoHechas"), 0) );
end

rule "Contador por cada estudiante para TOTAL de tareas hechas por materias"
	salience 99
	when
		$mat : Materia();
		$estud : Estudiante();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
	then
		insert( new Counter($mat.getNombre().concat("TareasTotal"), 0) );
end

rule "Contador por cada materia"
	salience 99
	when
		$mat : Materia();
		$estud : Estudiante();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
	then
		insert( new Counter($mat.getNombre(), 0) );
end

rule "Contador por cada tema"
	salience 99
	when
		$tema : Tema();
		$estud : Estudiante();
		$tema_estud : Tema_estudiante($tema.getId() == idTema, $estud.getId() == idEstudiante);
	then
		insert( new Counter($tema.getNombre(), 0) );
end

rule "Calcular sumatoria de tareas por tema"
	salience 98
	when
		$tema : Tema();
		$estud : Estudiante();
		$tar_estud : Tarea_estudiante($tema.getId() == idTema, $estud.getId() == idEstudiante);
		$tema_estud : Tema_estudiante($tema.getId() == idTema, $estud.getId() == idEstudiante);
		$c : Counter( name == $tema.getNombre() );
	then
		$c.setValue( $c.getValue() + 1 );
		double aux = $tema_estud.getPromedioEjercicios();
		aux = aux + $tar_estud.getCalificacion();	
		$tema_estud.setPromedioEjercicios(aux);
		System.out.println("Tema: "+ $tema.getNombre() + " suma: " + $tema_estud.getPromedioEjercicios() + " cont = " + $c.getValue());
end

rule "Contar numero de tareas TOTAL"
	salience 98
	when
		$estud : Estudiante();
		$mat : Materia();
		$tema : Tema( idMateria == $mat.getId() );
		$tarea : Tarea();
		$tar_estud : Tarea_estudiante($tarea.getId() == idTarea, $tema.getId() == idTema, $estud.getId() == idEstudiante);
		$c : Counter( name == $mat.getNombre().concat("TareasTotal") );
	then
		$c.setValue( $c.getValue() + 1 );
		System.out.println("Tareas totales: " + $c.getValue() + " por: " + $estud.getNombre() + " en: " + $mat.getNombre() );
end

rule "Contar tareas NO hechas"
	salience 98
	when
		$estud : Estudiante();
		$mat : Materia();
		$tema : Tema( idMateria == $mat.getId() );
		$tarea : Tarea();
		$tar_estud : Tarea_estudiante($tarea.getId() == idTarea, $tema.getId() == idTema, $estud.getId() == idEstudiante);
		$c : Counter( name == $mat.getNombre().concat("TareasNoHechas") );
		eval( $tar_estud.getCalificacion() == 0.0 && $tar_estud.isCompleted() == false );
	then
		$c.setValue( $c.getValue() + 1 );
		System.out.println("Tareas no hechas: " + $c.getValue() + " por: " + $estud.getNombre() + " en: " + $mat.getNombre() );
end

rule "Calcular promedio de temas a partir de sus tareas"
	salience 97
	when
		$tema : Tema();
		$estud : Estudiante();
		$tema_estud : Tema_estudiante($tema.getId() == idTema, $estud.getId() == idEstudiante);
		$c : Counter( name == $tema.getNombre() );
	then
		double aux = $tema_estud.getPromedioEjercicios();
		aux = ( aux / $c.getValue() );
		$tema_estud.setPromedioEjercicios(aux);
		System.out.println("Tema: "+ $tema.getNombre() + " promedio: " + $tema_estud.getPromedioEjercicios() + " cont = " + $c.getValue());
		//$c.setValue(0);
end

rule "Calcular sumatoria de promedio de materias por tema"
	salience 96
	when
		$tema : Tema();
		$estud : Estudiante();
		$mat : Materia();
		$tema_estud : Tema_estudiante($tema.getId() == idTema, $estud.getId() == idEstudiante);
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
		$c : Counter( name == $mat.getNombre() );
		eval( $tema.getIdMateria() == $mat.getId() );
	then
		$c.setValue( $c.getValue() + 1 );
		double aux = $estud_mat.getPromedioAlumno();
		aux = aux + $tema_estud.getPromedioEjercicios();
		$estud_mat.setPromedioAlumno(aux);
		System.out.println("Materia: " + $mat.getNombre() + " suma: " + $estud_mat.getPromedioAlumno() + " cont: " + $c.getValue());
end

rule "Calcular promedio de materias por tema"
	salience 95
	when
		$estud : Estudiante();
		$mat : Materia();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
		$c : Counter( name == $mat.getNombre() );
	then
		double aux = $estud_mat.getPromedioAlumno();
		aux = ( aux / $c.getValue() );
		$estud_mat.setPromedioAlumno(aux);
		System.out.println("Materia: " + $mat.getNombre() + " promedio: " + $estud_mat.getPromedioAlumno() + " cont: " + $c.getValue());
		//$c.setValue(0);
end

rule "Calcular sumatoria de materias para promedio global"
	salience 94
	when
		$estud : Estudiante();
		$mat : Materia();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
		$c : Counter( name == $estud.getNombre() );
	then
		$c.setValue( $c.getValue() + 1 );
		double aux = $estud.getPromedioGlobal();
		aux = aux + $estud_mat.getPromedioAlumno();
		$estud.setPromedioGlobal(aux);
		System.out.println("Estudiante: " + $estud.getNombre() + " suma: " + $estud.getPromedioGlobal() + " cont: " + $c.getValue());
end

rule "Calcular promedio global del alumno"
	salience 93
	when
		$estud : Estudiante();
		$c : Counter( name == $estud.getNombre() );
	then
		double aux = $estud.getPromedioGlobal();
		aux = ( aux / $c.getValue() );
		$estud.setPromedioGlobal(aux);
		System.out.println("Estudiante: " + $estud.getNombre() + " promedio: " + $estud.getPromedioGlobal() + " cont: " + $c.getValue());
		//$c.setValue(0);
end

rule "Determinar porcentaje completado de materia CON tareas SIN hacer"
	salience 91
	when
		$estud : Estudiante();
		$mat : Materia();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
		$cNoH : Counter( name == $mat.getNombre().concat("TareasNoHechas") );
		$cH : Counter( name == $mat.getNombre().concat("TareasTotal") );
		eval( $cNoH.getValue() != 0 );
	then
		double aux =  $cNoH.getValue() / $cH.getValue();
		aux = ( aux * 100 );
		$estud_mat.setPorcentajeCompletado(aux);
		System.out.println("Porcentaje completado: " + aux + " de: " + $mat.getNombre() + " por: " + $estud.getNombre());
		//$cH.setValue(0);
		//$cNoH.setValue(0);
end

rule "Determinar porcentaje completado de materia con tareas COMPLETAS"
	salience 92
	when
		$estud : Estudiante();
		$mat : Materia();
		$estud_mat : Estudiante_materia($mat.getId() == idMateria, $estud.getId() == idEstudiante);
		$cNoH : Counter( name == $mat.getNombre().concat("TareasNoHechas") );
		$cH : Counter( name == $mat.getNombre().concat("TareasTotal") );
		eval( $cNoH.getValue() == 0 );
	then
		$estud_mat.setPorcentajeCompletado(100.0);
		System.out.println("Porcentaje completado: 100.0 de: " + $mat.getNombre() + " por: " + $estud.getNombre());
		//$cH.setValue(0);
		//$cNoH.setValue(0);
end

/*
rule "Calcular promedio global -> en cadena se obtiene el promedio de tareas por tema por materia por cada una en la lista de materias"
    //include attributes such as "salience" here...
    salience 100
    when
        $e : Estudiante($materias : materiasCursando );
        eval($materias != null);
    then
    	$e.setPromedioGlobal($e.getPromedioTotal($materias));
        System.out.println("Estudiante encontrado!!: " + $e.toString());
end

rule "Encontrar temas"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		$temas : Tema() from $mat.getTemas();
		$t : Tema(nombre == "MRUA") from $temas;
	then
		System.out.println("Se encontro: " + $t.getNombre());
end

rule "Mal historial, reprobando materia media-alta, pero con tiempo"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() < 60 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() < 50 
		&& $e.getPromedioGlobal() < 65 );
	then
		//System.out.println($e.getNombre() + ", tu historial es malo, tu promedio en la materia: "
		//+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto; pero todavía tienes tiempo, busca asesoria");
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global es bueno, tu promedio en la materia: " 
		+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto; pero todavía tienes tiempo, practica y ponte al corriente");
end

rule "Mal historial, reprobando materia media-alta, pero sin tiempo"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() < 60 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() > 75 
		&& $e.getPromedioGlobal() < 65 );
	then
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global es malo, tu promedio en la materia: " 
		+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto y ya está por concluir el curso. "
		+ "Te recomendamos tomar asesorías con el profesor " + $mat.getMaestro() + "lo más pronto posible");
end

rule "Mal historial, aprobando materia media-alta, con tiempo"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() >= 70 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() < 50 
		&& $e.getPromedioGlobal() < 65 );
	then
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global ha sido malo, pero tu promedio en la materia: " 
		+ $mat.getNombre() + " va mejorando. ¡Felicidades! Sigue así lo que resta del curso.");
end

rule "Mal historial, aprobando materia media-alta, sin tiempo"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() >= 70 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() > 75 
		&& $e.getPromedioGlobal() < 65 );
	then
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global ha sido malo, pero tu promedio en la materia: " 
		+ $mat.getNombre() + " va mejorando. ¡Felicidades! Sigue así y tu promedio global subirá, ya casi acabas.");
end

rule "Buen historial, reprobando materia media-alta, pero con tiempo"

	when
		$e : Estudiante( $materias : materiasCursando, $recomendaciones : recomendaciones );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() < 60 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() < 50 
		&& $e.getPromedioGlobal() > 75 );
	then
		//System.out.println($e.getNombre() + ", tu historial es bueno, tu promedio en la materia: " 
		//+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto; pero todavía tienes tiempo, practica y ponte al corriente");
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global es bueno, tu promedio en la materia: " 
		+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto; pero todavía tienes tiempo, practica y ponte al corriente");
end

rule "Buen historial, reprobando materia media-alta, pero sin tiempo"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() < 60 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8) 
		&& $mat.getPorcentajeCompl() > 75 
		&& $e.getPromedioGlobal() > 75 );
	then
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global es malo, tu promedio en la materia: " 
		+ $mat.getNombre() + " es reprobatorio y el nivel de la clase es medio-alto y ya está por concluir el curso. "
		+ "Te recomendamos tomar asesorías con el profesor " + $mat.getMaestro() + "para mejorar tus resultados");
end

rule "Buen historial, aprobando materia media-alta"
	when
		$e : Estudiante( $materias : materiasCursando );
		$mat : Materia() from $materias;
		eval($mat.getPromedioAlumno() >= 70 
		&& ($mat.getNivelCurso() > 5 && $mat.getNivelCurso() < 8)  
		&& $e.getPromedioGlobal() > 75 );
	then
		$e.getRecomendaciones().add($e.getNombre() + ", tu promedio global y tu promedio en la materia: " 
		+ $mat.getNombre() + " son muy buenos. Sigue así para mantener un excelente promedio");
end

rule "Inscripcion futura nivel alto"

	when
		$e1 : EstudInscripcion( $e1.getMateriaAInscribir().getNivelCurso() > 7 
		&& promedioGlobal > 75 );
	then
		//System.out.println($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es muy alta para tu nivel");
		$e1.getRecomendaciones().add($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es muy alta para tu nivel");
end


rule "Inscripcion futura nivel correcto(medio)"

	when
		$e1 : EstudInscripcion( ($e1.getMateriaAInscribir().getNivelCurso() >= 3
		&& $e1.getMateriaAInscribir().getNivelCurso() <= 7)
		&& promedioGlobal > 75 );
	then
		//System.out.println($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es perfecta para tu nivel");
		$e1.getRecomendaciones().add($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es perfecta para tu nivel");
end

rule "Inscripcion futura nivel correcto"

	when
		$e1 : EstudInscripcion( $e1.getMateriaAInscribir().getNivelCurso() > 7 
		&& promedioGlobal > 75 );
	then
		//System.out.println($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es perfecta para tu nivel");
		$e1.getRecomendaciones().add($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es perfecta para tu nivel");
end

rule "Inscripcion futura nivel bajo"
	when
		$e1 : EstudInscripcion( materiaAInscribir.getNivelCurso() < 3
		&& promedioGlobal > 75 );
	then
		//System.out.println($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es muy baja para tu nivel");
		$e1.getRecomendaciones().add($e1.getNombre() + ", la materia: " + $e1.getMateriaAInscribir().getNombre() + ", es muy baja para tu nivel");
end
*/
